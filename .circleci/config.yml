version: 2.1

orbs:
  docker: circleci/docker@2.6.0

executors:
  docker-enabled:
    docker:
      - image: docker:stable-dind
    environment:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_TLS_VERIFY: "0"  # Disable Docker TLS
    working_directory: /home/circleci/project

jobs:
  Setup:
    executor: docker-enabled
    steps:
      - setup_remote_docker
      - run:
          name: Verify Docker Daemon
          command: |
            echo "DOCKER_TLS_VERIFY=$DOCKER_TLS_VERIFY"
            echo "DOCKER_HOST=$DOCKER_HOST"
            docker info
      - run:
          name: Install General Dependencies
          command: |
            apk --no-cache add bash git ca-certificates curl openssh-client \
              make gcc g++ python3 libtool autoconf automake jq \
              openssl ncurses coreutils libgcc linux-headers grep util-linux binutils findutils
      - checkout
      - run:
          name: Install Dependencies Using Makefile
          command: make install
      - save_cache:
          key: dependency-cache-v2-{{ checksum "Makefile" }}
          paths:
            - node_modules

  Build:
    executor: docker-enabled
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-v2-{{ checksum "Makefile" }}
      - run:
          name: Build Project
          command: make bare_build
      - run:
          name: Extract Build Artifacts
          command: make bare_extract
      - store_artifacts:
          path: '*.tgz'

  Release:
    executor: docker-enabled
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-v2-{{ checksum "Makefile" }}
      - run:
          name: Build Project
          command: make bare_build
      - run:
          name: Extract Build Artifacts
          command: make bare_extract
      - run:
          name: Upload Release
          command: make upload_release
      - store_artifacts:
          path: '*.tgz'

workflows:
  version: 2
  build_and_test:
    jobs:
      - Setup
      - Build:
          requires:
            - Setup
      - Release:
          requires:
            - Build
